["{\"key\":\"1\",\"message\":\"singleton\",\"data\":\"+ (instancetype)sharedManager;\\n+ (instancetype)sharedManager {\\n    static _replace_ *mine = nil;\\n    static dispatch_once_t onceToken;\\n    dispatch_once(&onceToken, ^{ mine = [[self alloc] init]; });\\n    return mine;\\n}\"}\n"]
["{\"key\":\"2\",\"data\":\"@property (nonatomic, copy) void(^block)(NSString *value);\",\"message\":\"@property ^block\"}"]
["{\"key\":\"3\",\"message\":\"@property ^btnClickedBlock\",\"data\":\"@property (nonatomic, copy) void (^btnClickedBlock)(UIButton *sender);\"}\n"]
["{\"key\":\"4\",\"message\":\"block as methods parameter\",\"data\":\"-(void) setBlock:(void (^)(NSString *value))block {\\n    self.block = block;\\n}\\n\"}\n"]
["{\"key\":\"5\",\"message\":\"message\",\"data\":\"typedef NSString *(^MyBlock)(NSString *value);\\nMyBlock block = ^ (NSString *value){       \\n     return [NSString stringWithFormat:@\\\"%@\\\",value];   \\n};    \\nNSLog(@\\\"%@\\\", block(@\\\"小宇\\\"));\\n}\"}\n"]
["{\"key\":\"6\",\"message\":\"message\",\"data\":\"\\\/\\\/ InlineBlock, 编译器会提示\\nreturnType(^blockName)(parameterTypes)=^(parameters){\\n    \\\/\\\/ statementes\\n};\"}"]
["{\"key\":\"7\",\"message\":\"message\",\"data\":\"\\\/\\\/ 直接定义\\n@property (nonatomic, copy) void(^block)(NSInteger);\\n\\\/\\\/ 方法中定义\\n- (void)block:(void(^) (NSInteger index))block;\\n\\\/\\\/其他定义\\ntypedef void(^Block)(NSInteger index);\\n@property (nonatomic, copy) Block block;\"}\n"]
["{\"key\":\"8\",\"message\":\"gcd block\",\"data\":\"dispatch_async(dispatch_get_global_queue(0, 0), ^{\\n    \\\/\\\/ something\\n    dispatch_async(dispatch_get_main_queue(), ^{\\n        \\\/\\\/ something\\n    });\\n});\\nstatic dispatch_once_t onceToken;\\ndispatch_once(&onceToken, ^{\\n    \\\/\\\/ code to be executed once\\n});\\n\\\/\\\/ gcd 延迟2秒执行\\ndispatch_after(dispatch_time(DISPATCH_TIME_NOW, 2.0 * NSEC_PER_SEC), dispatch_get_main_queue(), ^(void){\\n    \\\/\\\/ code to be executed on the main queue after delay\\n});\"}\n"]
